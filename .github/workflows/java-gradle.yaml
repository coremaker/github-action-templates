name: Java-Gradle

on:
  workflow_call:
    inputs:
      WORKING_DIR:
        required: false
        type: string
        default: "."
      SERVICE_NAME:
        required: true
        type: string
      RUN_TESTS:
        required: false
        type: boolean
        default: false
      JAVA_VERSION:
        required: false
        type: number
        default: 17
      JAVA_DISTRIBUTION:
        required: false
        type: string
        default: 'corretto'
      GCR_REGISTRY:
        required: false
        type: string
        default: 'gcr.io'
      GCR_REGISTRY_PROJECT:
        required: true
        type: string
      TRIVY_SCAN_ENABLED:
        required: false
        type: boolean
        default: true
      TRIVY_TIMEOUT:
        required: false
        type: string
        default: "10m0s"
    secrets:
      GCR_JSON_KEY:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JAVA
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          distribution: ${{ inputs.JAVA_DISTRIBUTION }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      
      - name: Execute Build and Tests
        if: ${{ inputs.RUN_TESTS }}
        run: ./gradlew :${{ inputs.SERVICE_NAME }}:build

      - name: Execute Only Build (-x test)
        if: ${{ inputs.RUN_TESTS == false }}
        run: ./gradlew :${{ inputs.SERVICE_NAME }}:build -x test
      
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.GCR_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.WORKING_DIR }}
          push: false
          tags: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:latest,${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          labels: |
            COMMIT_SHA=${{ github.sha }}
      - name: Trivy vulnerability scanner
        if: ${{ inputs.TRIVY_SCAN_ENABLED }}
        uses: aquasecurity/trivy-action@0.9.1
        with:
          image-ref: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          format: "table"
          exit-code: 1
          security-checks: "vuln"
          vuln-type: "library"
          severity: "CRITICAL"
          timeout: ${{ inputs.TRIVY_TIMEOUT }}

      - name: Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.WORKING_DIR }}
          push: true
          tags: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:latest,${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          labels: |
            COMMIT_SHA=${{ github.sha }}
      - name: Done
        run: echo build succesfully!