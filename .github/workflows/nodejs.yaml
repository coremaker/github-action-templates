name: Nodejs

on:
  workflow_call:
    inputs:
      WORKING_DIR:
        required: false
        type: string
        default: "."
      SERVICE_NAME:
        required: true
        type: string
      RUN_TESTS:
        required: false
        type: boolean
        default: false
      NODE_VERSION:
        required: false
        type: number
        default: 16
      GCR_REGISTRY:
        required: false
        type: string
        default: "gcr.io"
      GCR_REGISTRY_PROJECT:
        required: true
        type: string
      TRIVY_SCAN_ENABLED:
        required: false
        type: boolean
        default: true
      TRIVY_TIMEOUT:
        required: false
        type: string
        default: "10m0s"
      PR_CHECK:
        required: false 
        type: boolean
        default: false
      SCHEMA_CHECK:
        required: false 
        type: boolean
        default: false
    secrets:
      GCR_JSON_KEY:
        required: true
      HIVE_TOKEN:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ inputs.WORKING_DIR }}/node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Running Tests
        if: ${{ inputs.RUN_TESTS }}
        run: npm run test

      - name: Build App
        id: build
        run: npm run build

      - name: Schema Check
        if: ${{ inputs.SCHEMA_CHECK }}
        run: npm run schema:check --hive-token=${{ secrets.HIVE_TOKEN }}

      - name: Login to GCR
        if: ${{ inputs.PR_CHECK == false }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.GCR_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.WORKING_DIR }}
          push: false
          tags: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:latest,${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          labels: |
            COMMIT_SHA=${{ github.sha }}

      - name: Trivy vulnerability scanner
        if: ${{ inputs.TRIVY_SCAN_ENABLED }}
        uses: aquasecurity/trivy-action@0.9.1
        with:
          image-ref: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          format: "table"
          exit-code: 1
          security-checks: "vuln"
          vuln-type: "library"
          severity: "CRITICAL"
          timeout: ${{ inputs.TRIVY_TIMEOUT }}

      - name: Push Docker Image
        if: ${{ inputs.PR_CHECK == false }}
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.WORKING_DIR }}
          push: true
          tags: ${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:latest,${{ inputs.GCR_REGISTRY }}/${{ inputs.GCR_REGISTRY_PROJECT }}/${{ inputs.SERVICE_NAME }}:${{ github.sha }}
          labels: |
            COMMIT_SHA=${{ github.sha }}